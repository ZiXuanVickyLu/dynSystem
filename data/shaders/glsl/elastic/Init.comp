#version 450
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_debug_printf : enable

layout(std430, binding = 0) buffer PosIn {
    vec3 Pos[ ];
};

layout(std430, binding = 1) buffer Tetrahedron {
    uvec4 tet[ ];
};

layout(std430, binding = 2) buffer B_Matrix{
    mat3 B[ ];
};

layout (std430, binding = 3) buffer Volume  {
    float volume[];
} ;

layout (push_constant) uniform PushConsts {
    uint elementCount;
} pushConsts;

layout (local_size_x = 64) in;

void main() 
{
    uvec3 id = gl_GlobalInvocationID; 

    uint index = id.x;
    if (index >= pushConsts.elementCount) 
        return;
    vec3 start = Pos[tet[index][0]];
    mat3 B_;
    B_[0] = Pos[tet[index][1]] - start;
    B_[1] = Pos[tet[index][2]] - start;
    B_[2] = Pos[tet[index][3]] - start;

    volume[index] = 1.0/6.0* determinant(B_);
  
    if(volume[index] >= 1e-7){
        B[index] = inverse(B_);
    }else{
        mat3 orth = mat3(0.0);
        orth[0][0] = B_[0].length();
        orth[1][1] = B_[1].length();
        orth[2][2] = B_[2].length();
        B[index] = inverse(orth);
        volume[index] = 1.0/6.0 * determinant(orth);
    }
    
}