#version 450
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_debug_printf : enable


layout(std430, binding = 0) buffer EleForce {
	mat3 H[ ];
};

layout(std430, binding = 1) buffer Tetrahedron {
	uvec4 tet[ ];
};

layout(std430, binding = 2) buffer Force {
    vec3 force[ ];
};

layout (push_constant) uniform PushConsts {
    uint vertexCount;
    uint elementCount;
} pushConsts;

layout (local_size_x = 64) in;


void main() 
{
    uvec3 id = gl_GlobalInvocationID; 

	uint index = id.x;
	if (index >= pushConsts.vertexCount) 
		return;

	force[index] = vec3(0.0);

	uint i;
	for(i = 0; i < pushConsts.elementCount; ++i){
		for(uint j = 1; j<=3; ++j){
			if(tet[i][j] == index){
				force[index] = force[index] + H[i][j-1]; 
			}
		}
		if(tet[i][0] == index)
			force[index] = force[index] - H[i][0] - H[i][1] - H[i][2]; 
	}
   
}